---
common-steps:
  - &install_poetry
    run:
      name: Install Poetry
      command: |
        set -e
        source /etc/os-release
        if [[ "$VERSION_CODENAME" == "bullseye" ]]; then
            # Install Poetry via PyPI
            apt-get update && apt-get install --yes --no-install-recommends python3-pip
            pip install poetry==1.6.1
        elif [[ "$VERSION_CODENAME" == "bookworm" ]]; then
            # Install Poetry via system package
            apt-get update && apt-get install --yes --no-install-recommends python3-poetry
        else
            echo "Unsupported Debian version: $VERSION_CODENAME"
            exit 1
        fi

  - &install_testing_dependencies
    run:
      name: Install testing dependencies
      command: |
        apt-get install --yes --no-install-recommends git gnupg make
        poetry install --no-ansi

  - &run_tests
    run:
      name: Install requirements and run tests
      command: |
        make check

  - &install_packaging_dependencies
    run:
      name: Install Debian packaging dependencies and download wheels
      command: |
        apt-get update && apt-get install -y git git-lfs make sudo
        mkdir ~/packaging && cd ~/packaging
        git clone https://github.com/freedomofpress/securedrop-builder.git
        cd securedrop-builder
        make install-deps
        source .venv/bin/activate
        PKG_DIR=~/project make requirements

  - &verify_requirements
    run:
      name: Ensure that build-requirements.txt and requirements.txt are in sync.
      command: |
        cd ~/project
        # Return 1 if unstaged changes exist (after `make requirements` in the
        # previous run step), else return 0.
        git diff --quiet

  - &build_debian_package
    run:
      name: Build debian package
      command: |
        cd ~/packaging/securedrop-builder
        export PKG_VERSION=1000.0
        export PKG_PATH=~/project/
        source .venv/bin/activate
        make securedrop-log

version: 2
jobs:
  test-bullseye:
    docker:
      - image: debian:bullseye
    steps:
      - checkout
      - *install_poetry
      - *install_testing_dependencies
      - *run_tests

  build-bullseye:
    docker:
      - image: debian:bullseye
    steps:
      - checkout
      - *install_packaging_dependencies
      - *verify_requirements
      - *build_debian_package

workflows:
  version: 2
  per_pr:
    jobs:
      - test-bullseye
      - build-bullseye
